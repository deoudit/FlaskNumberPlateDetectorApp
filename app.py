# -*- coding: utf-8 -*-
"""
Created on Sun Mar 29 01:16:59 2020

@author: UDIT DEO
"""

from flask import Flask, request, render_template
import dill

app = Flask(__name__, template_folder='templates')


model = dill.loads(b'\x80\x03cdill._dill\n_create_function\nq\x00(cdill._dill\n_load_type\nq\x01X\x08\x00\x00\x00CodeTypeq\x02\x85q\x03Rq\x04(K\x01K\x00K\x16K\x07KCBT\x01\x00\x00d\x01d\x00l\x00}\x01d\x01d\x00l\x01}\x02d\x01d\x00l\x02}\x03d\x01d\x00l\x03}\x04d\x01d\x00l\x04}\x05d\x01d\x00l\x05}\x06d\x02|\x04j\x03_\x06|\x02j\x07|\x00\x83\x01}\x07|\x03j\x08|\x07d\x03d\x04\x8d\x02}\x07|\x02j\t|\x07|\x02j\n\x83\x02}\x08|\x02j\x0b|\x08d\x05d\x06d\x06\x83\x04}\x08|\x02j\x0c|\x08d\x07d\x08\x83\x03}\t|\x02j\r|\t|\x02j\x0e|\x02j\x0f\x83\x03\\\x02}\n}\x0bt\x10|\n|\x02j\x11d\td\n\x8d\x03d\x00d\x0b\x85\x02\x19\x00}\nd\x01}\x0c|\x07j\x12\x83\x00}\r|\x02j\x13|\r|\nd\x14d\x15d\x0e\x83\x05\x01\x00d\x01}\x0ex<|\nD\x00]4}\x0f|\x02j\x14|\x0fd\t\x83\x02}\x10|\x02j\x15|\x0fd\x0f|\x10\x14\x00d\t\x83\x03}\x11t\x16|\x11\x83\x01d\x10k\x02r\xd2|\x11}\x0cP\x00q\xd2W\x00|\x01j\x17|\x08j\x18|\x01j\x19\x83\x02}\x12|\x02j\x13|\x12|\x0cg\x01d\x01d\rd\x16\x83\x05}\x13|\x02j\x1a|\x07|\x07|\x12d\x11\x8d\x03}\x13d\x12}\x14|\x04j\x1b|\x13|\x14d\x13\x8d\x02}\x15|\x15S\x00q\x05(NK\x00X,\x00\x00\x00C:\\Program Files\\Tesseract-OCR\\tesseract.exeq\x06M\xf4\x01X\x05\x00\x00\x00widthq\x07\x85q\x08K\x0bK\x11K\xaaK\xc8\x88X\x03\x00\x00\x00keyq\tX\x07\x00\x00\x00reverseq\n\x86q\x0bK\x1eK\x01K\xffK\x03G?\x94z\xe1G\xae\x14{K\x04X\x04\x00\x00\x00maskq\x0c\x85q\rX\x16\x00\x00\x00-l eng --oem 1 --psm 3q\x0eX\x06\x00\x00\x00configq\x0f\x85q\x10J\xff\xff\xff\xffK\x00K\xffK\x00\x87q\x11J\xff\xff\xff\xfftq\x12(X\x05\x00\x00\x00numpyq\x13X\x03\x00\x00\x00cv2q\x14X\x07\x00\x00\x00imutilsq\x15X\x0b\x00\x00\x00pytesseractq\x16X\x06\x00\x00\x00pandasq\x17X\x04\x00\x00\x00timeq\x18X\r\x00\x00\x00tesseract_cmdq\x19X\x06\x00\x00\x00imreadq\x1aX\x06\x00\x00\x00resizeq\x1bX\x08\x00\x00\x00cvtColorq\x1cX\x0e\x00\x00\x00COLOR_BGR2GRAYq\x1dX\x0f\x00\x00\x00bilateralFilterq\x1eX\x05\x00\x00\x00Cannyq\x1fX\x0c\x00\x00\x00findContoursq X\t\x00\x00\x00RETR_LISTq!X\x13\x00\x00\x00CHAIN_APPROX_SIMPLEq"X\x06\x00\x00\x00sortedq#X\x0b\x00\x00\x00contourAreaq$X\x04\x00\x00\x00copyq%X\x0c\x00\x00\x00drawContoursq&X\t\x00\x00\x00arcLengthq\'X\x0c\x00\x00\x00approxPolyDPq(X\x03\x00\x00\x00lenq)X\x05\x00\x00\x00zerosq*X\x05\x00\x00\x00shapeq+X\x05\x00\x00\x00uint8q,X\x0b\x00\x00\x00bitwise_andq-X\x0f\x00\x00\x00image_to_stringq.tq/(X\x01\x00\x00\x00fq0X\x02\x00\x00\x00npq1h\x14h\x15h\x16X\x02\x00\x00\x00pdq2h\x18X\x03\x00\x00\x00imgq3X\x08\x00\x00\x00gray_imgq4X\x06\x00\x00\x00c_edgeq5X\x03\x00\x00\x00cntq6X\x03\x00\x00\x00newq7X\x10\x00\x00\x00NumberPlateCountq8X\x03\x00\x00\x00im2q9X\x05\x00\x00\x00countq:X\x01\x00\x00\x00cq;X\t\x00\x00\x00perimeterq<X\x06\x00\x00\x00approxq=X\x06\x00\x00\x00maskedq>X\t\x00\x00\x00new_imageq?X\x07\x00\x00\x00configrq@X\x07\x00\x00\x00text_noqAtqBX\x1e\x00\x00\x00<ipython-input-3-cd53d6b1368e>qCX\x04\x00\x00\x00mainqDK\x01C<\x00\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x02\x08\x05\x08\x04\n\x04\x0e\n\x0e\x0c\x10\n\x0e\t\x16\x04\x18\x02\x04\x03\x08\x02\x12\x07\x04\x02\n\x02\x0c\x02\x12\x02\x0c\x02\x04\x02\x06\x06\x10\x02\x14\x02\x10\t\x04\x05\x0e\x16qE))tqFRqGc__builtin__\n__main__\nhDNN}qHNtqIRqJ.')

@app.route('/')
def index():
    return render_template("index.html")


@app.route('/detect', methods=['POST'])
def detect():
    if request.method == 'POST':
        f = request.files['file']
        try:
            number = model(f.filename)

            l = len(number)
            if l>0:
                return render_template("detect.html", name='Licence Plate Number is {}'.format(number))
            else:
                return render_template("detect.html", name="Licence Plate Number can't be detected")
        except:
            return render_template("detect.html", name="Licence Plate Number can't be detected")
    
if __name__ == "__main__":
    app.run(debug=False)


